// <auto-generated />
using System;
using Lab1BIgData.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab1BIgData.Migrations
{
    [DbContext(typeof(HotelsBigContext))]
    [Migration("20250321133345_UpdatePhoneLength2")]
    partial class UpdatePhoneLength2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lab1BIgData.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime")
                        .HasColumnName("check_in_date");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime")
                        .HasColumnName("check_out_date");

                    b.Property<int>("GuestId")
                        .HasColumnType("int")
                        .HasColumnName("guest_id");

                    b.Property<int>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total_price");

                    b.HasKey("Id")
                        .HasName("PK__Booking__3213E83FC42F6F64");

                    b.HasIndex("GuestId");

                    b.HasIndex("RoomId");

                    b.HasIndex(new[] { "Id" }, "UQ__Booking__3213E83E3065221F")
                        .IsUnique();

                    b.ToTable("Booking", (string)null);
                });

            modelBuilder.Entity("Lab1BIgData.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("first_name");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime")
                        .HasColumnName("hire_date");

                    b.Property<int>("HotelId")
                        .HasColumnType("int")
                        .HasColumnName("hotel_id");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("last_name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)")
                        .HasColumnName("phone");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("position");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("salary");

                    b.HasKey("Id")
                        .HasName("PK__Employee__3213E83F67EFB1AF");

                    b.HasIndex("HotelId");

                    b.HasIndex(new[] { "Id" }, "UQ__Employee__3213E83E1DD0F5BD")
                        .IsUnique();

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("Lab1BIgData.Models.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("date_of_birth");

                    b.Property<DateTime>("DateRegistered")
                        .HasColumnType("datetime")
                        .HasColumnName("date_registered");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("last_name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)")
                        .HasColumnName("phone");

                    b.HasKey("Id")
                        .HasName("PK__Guest__3213E83FC5999379");

                    b.HasIndex(new[] { "Id" }, "UQ__Guest__3213E83E6A5AEF92")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Guest__AB6E61641B388C4D")
                        .IsUnique();

                    b.ToTable("Guest", (string)null);
                });

            modelBuilder.Entity("Lab1BIgData.Models.GuestService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateUsed")
                        .HasColumnType("datetime")
                        .HasColumnName("date_used");

                    b.Property<int>("GuestId")
                        .HasColumnType("int")
                        .HasColumnName("guest_id");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("service_id");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total_price");

                    b.HasKey("Id")
                        .HasName("PK__GuestSer__3213E83F75EEBC6A");

                    b.HasIndex("GuestId");

                    b.HasIndex("ServiceId");

                    b.HasIndex(new[] { "Id" }, "UQ__GuestSer__3213E83EF16F4C81")
                        .IsUnique();

                    b.ToTable("GuestService", (string)null);
                });

            modelBuilder.Entity("Lab1BIgData.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("country");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int>("StarRating")
                        .HasColumnType("int")
                        .HasColumnName("star_rating");

                    b.HasKey("Id")
                        .HasName("PK__Hotel__3213E83F0CC345B7");

                    b.HasIndex(new[] { "Id" }, "UQ__Hotel__3213E83EBF535E23")
                        .IsUnique();

                    b.ToTable("Hotel", (string)null);
                });

            modelBuilder.Entity("Lab1BIgData.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("amount");

                    b.Property<int>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("booking_id");

                    b.Property<int>("GuestId")
                        .HasColumnType("int")
                        .HasColumnName("guest_id");

                    b.Property<int?>("GuestServiceId")
                        .HasColumnType("int")
                        .HasColumnName("guest_service_id");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime")
                        .HasColumnName("payment_date");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("payment_method");

                    b.HasKey("Id")
                        .HasName("PK__Payment__3213E83F322AB14E");

                    b.HasIndex("BookingId");

                    b.HasIndex("GuestId");

                    b.HasIndex("GuestServiceId");

                    b.HasIndex(new[] { "Id" }, "UQ__Payment__3213E83E7D55C3B7")
                        .IsUnique();

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("Lab1BIgData.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GuestId")
                        .HasColumnType("int")
                        .HasColumnName("guest_id");

                    b.Property<int>("HotelId")
                        .HasColumnType("int")
                        .HasColumnName("hotel_id");

                    b.Property<int>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime")
                        .HasColumnName("review_date");

                    b.Property<string>("ReviewText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("review_text");

                    b.HasKey("Id")
                        .HasName("PK__Review__3213E83F93412ED8");

                    b.HasIndex("GuestId");

                    b.HasIndex("HotelId");

                    b.HasIndex(new[] { "Id" }, "UQ__Review__3213E83EBE388CAF")
                        .IsUnique();

                    b.ToTable("Review", (string)null);
                });

            modelBuilder.Entity("Lab1BIgData.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HotelId")
                        .HasColumnType("int")
                        .HasColumnName("hotel_id");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit")
                        .HasColumnName("is_available");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price_per_night");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("room_number");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("room_type");

                    b.HasKey("Id")
                        .HasName("PK__Room__3213E83F6409CBB1");

                    b.HasIndex("HotelId");

                    b.HasIndex(new[] { "Id" }, "UQ__Room__3213E83EBBA95484")
                        .IsUnique();

                    b.ToTable("Room", (string)null);
                });

            modelBuilder.Entity("Lab1BIgData.Models.RoomCleaning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CleaningDate")
                        .HasColumnType("datetime")
                        .HasColumnName("cleaning_date");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comments");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    b.Property<int>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    b.HasKey("Id")
                        .HasName("PK__RoomClea__3213E83F8307D60D");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RoomId");

                    b.HasIndex(new[] { "Id" }, "UQ__RoomClea__3213E83E5D601177")
                        .IsUnique();

                    b.ToTable("RoomCleaning", (string)null);
                });

            modelBuilder.Entity("Lab1BIgData.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<int>("HotelId")
                        .HasColumnType("int")
                        .HasColumnName("hotel_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.HasKey("Id")
                        .HasName("PK__Service__3213E83FFB186CF1");

                    b.HasIndex("HotelId");

                    b.HasIndex(new[] { "Id" }, "UQ__Service__3213E83EB3AAF395")
                        .IsUnique();

                    b.ToTable("Service", (string)null);
                });

            modelBuilder.Entity("Lab1BIgData.Models.Booking", b =>
                {
                    b.HasOne("Lab1BIgData.Models.Guest", "Guest")
                        .WithMany("Bookings")
                        .HasForeignKey("GuestId")
                        .IsRequired()
                        .HasConstraintName("Booking_fk1");

                    b.HasOne("Lab1BIgData.Models.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .IsRequired()
                        .HasConstraintName("Booking_fk2");

                    b.Navigation("Guest");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Lab1BIgData.Models.Employee", b =>
                {
                    b.HasOne("Lab1BIgData.Models.Hotel", "Hotel")
                        .WithMany("Employees")
                        .HasForeignKey("HotelId")
                        .IsRequired()
                        .HasConstraintName("Employee_fk1");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Lab1BIgData.Models.GuestService", b =>
                {
                    b.HasOne("Lab1BIgData.Models.Guest", "Guest")
                        .WithMany("GuestServices")
                        .HasForeignKey("GuestId")
                        .IsRequired()
                        .HasConstraintName("GuestService_fk1");

                    b.HasOne("Lab1BIgData.Models.Service", "Service")
                        .WithMany("GuestServices")
                        .HasForeignKey("ServiceId")
                        .IsRequired()
                        .HasConstraintName("GuestService_fk2");

                    b.Navigation("Guest");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Lab1BIgData.Models.Payment", b =>
                {
                    b.HasOne("Lab1BIgData.Models.Booking", "Booking")
                        .WithMany("Payments")
                        .HasForeignKey("BookingId")
                        .IsRequired()
                        .HasConstraintName("Payment_fk2");

                    b.HasOne("Lab1BIgData.Models.Guest", "Guest")
                        .WithMany("Payments")
                        .HasForeignKey("GuestId")
                        .IsRequired()
                        .HasConstraintName("Payment_fk1");

                    b.HasOne("Lab1BIgData.Models.GuestService", "GuestService")
                        .WithMany("Payments")
                        .HasForeignKey("GuestServiceId")
                        .HasConstraintName("Payment_fk3");

                    b.Navigation("Booking");

                    b.Navigation("Guest");

                    b.Navigation("GuestService");
                });

            modelBuilder.Entity("Lab1BIgData.Models.Review", b =>
                {
                    b.HasOne("Lab1BIgData.Models.Guest", "Guest")
                        .WithMany("Reviews")
                        .HasForeignKey("GuestId")
                        .IsRequired()
                        .HasConstraintName("Review_fk1");

                    b.HasOne("Lab1BIgData.Models.Hotel", "Hotel")
                        .WithMany("Reviews")
                        .HasForeignKey("HotelId")
                        .IsRequired()
                        .HasConstraintName("Review_fk2");

                    b.Navigation("Guest");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Lab1BIgData.Models.Room", b =>
                {
                    b.HasOne("Lab1BIgData.Models.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .IsRequired()
                        .HasConstraintName("Room_fk1");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Lab1BIgData.Models.RoomCleaning", b =>
                {
                    b.HasOne("Lab1BIgData.Models.Employee", "Employee")
                        .WithMany("RoomCleanings")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("RoomCleaning_fk2");

                    b.HasOne("Lab1BIgData.Models.Room", "Room")
                        .WithMany("RoomCleanings")
                        .HasForeignKey("RoomId")
                        .IsRequired()
                        .HasConstraintName("RoomCleaning_fk1");

                    b.Navigation("Employee");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Lab1BIgData.Models.Service", b =>
                {
                    b.HasOne("Lab1BIgData.Models.Hotel", "Hotel")
                        .WithMany("Services")
                        .HasForeignKey("HotelId")
                        .IsRequired()
                        .HasConstraintName("Service_fk1");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Lab1BIgData.Models.Booking", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Lab1BIgData.Models.Employee", b =>
                {
                    b.Navigation("RoomCleanings");
                });

            modelBuilder.Entity("Lab1BIgData.Models.Guest", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("GuestServices");

                    b.Navigation("Payments");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("Lab1BIgData.Models.GuestService", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Lab1BIgData.Models.Hotel", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Reviews");

                    b.Navigation("Rooms");

                    b.Navigation("Services");
                });

            modelBuilder.Entity("Lab1BIgData.Models.Room", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("RoomCleanings");
                });

            modelBuilder.Entity("Lab1BIgData.Models.Service", b =>
                {
                    b.Navigation("GuestServices");
                });
#pragma warning restore 612, 618
        }
    }
}
